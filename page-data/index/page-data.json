{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ce477176-1423-5b8d-b561-ffb0f98d8678","excerpt":"state 맨 먼저 만든 프로그램은 클릭카운트를 HTML애 출력했다. 나 역시 리액트안에서 변수를 생성했는데 어찌된 영문인지 실행되지 않았다. 변수를 핸들링하려면 먼저 state에 대해 서 이해해야 한다. state: 기분적으로 데이터가 저장되는 곳 안되는 이유는, 리액트돔에서 기본적으로 html 렌더링은 한번만 하기 때문이다. 그래서 클릭을 하더라도 콘솔상에서는 변수가 변하지만, UI에는 출력되지 않았던 것이다. Before 이렇게 클릭할때마다 렌더링을 해주는 함수를 넣는다면, 드디어 우리가 원했던 프로그램이 완성된다\n??왜 더 복잡해지지??\n차이점이 하나 더 있다. 클릭할때마다, 바닐라에서 태그 전체가 상호작용(검사에서 깜빡깜빡)하지만, 리액트에서는 바뀌는 텍스트 부분만 상호작용한다. 전자는 HTML을 전부 렌더링하지만, 후자는 교체되는 부분만 렌더링한다. After useState를 사용하면 변수(date)와 함수(modifier)를 만든다. 함수를 사용하면 굳이 리렌더링을 …","frontmatter":{"categories":"react","title":"리액트_#2","date":"June 30, 2022"},"fields":{"slug":"/react/t2/index 2/"}}},{"node":{"id":"6d2b94b9-f7a6-5887-bba8-24754c101f25","excerpt":"state 맨 먼저 만든 프로그램은 클릭카운트를 HTML애 출력했다. 나 역시 리액트안에서 변수를 생성했는데 어찌된 영문인지 실행되지 않았다. 변수를 핸들링하려면 먼저 state에 대해 서 이해해야 한다. state: 기분적으로 데이터가 저장되는 곳 안되는 이유는, 리액트돔에서 기본적으로 html 렌더링은 한번만 하기 때문이다. 그래서 클릭을 하더라도 콘솔상에서는 변수가 변하지만, UI에는 출력되지 않았던 것이다. Before 이렇게 클릭할때마다 렌더링을 해주는 함수를 넣는다면, 드디어 우리가 원했던 프로그램이 완성된다\n??왜 더 복잡해지지??\n차이점이 하나 더 있다. 클릭할때마다, 바닐라에서 태그 전체가 상호작용(검사에서 깜빡깜빡)하지만, 리액트에서는 바뀌는 텍스트 부분만 상호작용한다. 전자는 HTML을 전부 렌더링하지만, 후자는 교체되는 부분만 렌더링한다. After useState를 사용하면 변수(date)와 함수(modifier)를 만든다. 함수를 사용하면 굳이 리렌더링을 …","frontmatter":{"categories":"react","title":"리액트_#2","date":"June 30, 2022"},"fields":{"slug":"/react/t2/index 3/"}}},{"node":{"id":"a5369a06-d83d-5815-818c-cfff372e43d5","excerpt":"state 맨 먼저 만든 프로그램은 클릭카운트를 HTML애 출력했다. 나 역시 리액트안에서 변수를 생성했는데 어찌된 영문인지 실행되지 않았다. 변수를 핸들링하려면 먼저 state에 대해 서 이해해야 한다. state: 기분적으로 데이터가 저장되는 곳 안되는 이유는, 리액트돔에서 기본적으로 html 렌더링은 한번만 하기 때문이다. 그래서 클릭을 하더라도 콘솔상에서는 변수가 변하지만, UI에는 출력되지 않았던 것이다. Before 이렇게 클릭할때마다 렌더링을 해주는 함수를 넣는다면, 드디어 우리가 원했던 프로그램이 완성된다\n??왜 더 복잡해지지??\n차이점이 하나 더 있다. 클릭할때마다, 바닐라에서 태그 전체가 상호작용(검사에서 깜빡깜빡)하지만, 리액트에서는 바뀌는 텍스트 부분만 상호작용한다. 전자는 HTML을 전부 렌더링하지만, 후자는 교체되는 부분만 렌더링한다. After useState를 사용하면 변수(date)와 함수(modifier)를 만든다. 함수를 사용하면 굳이 리렌더링을 …","frontmatter":{"categories":"react","title":"리액트_#2","date":"June 30, 2022"},"fields":{"slug":"/react/t2/index 4/"}}},{"node":{"id":"de0a7d74-42b3-5d2e-aa13-ad41e325f77f","excerpt":"state 맨 먼저 만든 프로그램은 클릭카운트를 HTML애 출력했다. 나 역시 리액트안에서 변수를 생성했는데 어찌된 영문인지 실행되지 않았다. 변수를 핸들링하려면 먼저 state에 대해 서 이해해야 한다. state: 기분적으로 데이터가 저장되는 곳 안되는 이유는, 리액트돔에서 기본적으로 html 렌더링은 한번만 하기 때문이다. 그래서 클릭을 하더라도 콘솔상에서는 변수가 변하지만, UI에는 출력되지 않았던 것이다. Before 이렇게 클릭할때마다 렌더링을 해주는 함수를 넣는다면, 드디어 우리가 원했던 프로그램이 완성된다\n??왜 더 복잡해지지??\n차이점이 하나 더 있다. 클릭할때마다, 바닐라에서 태그 전체가 상호작용(검사에서 깜빡깜빡)하지만, 리액트에서는 바뀌는 텍스트 부분만 상호작용한다. 전자는 HTML을 전부 렌더링하지만, 후자는 교체되는 부분만 렌더링한다. After useState를 사용하면 변수(date)와 함수(modifier)를 만든다. 함수를 사용하면 굳이 리렌더링을 …","frontmatter":{"categories":"react","title":"리액트_#2","date":"June 30, 2022"},"fields":{"slug":"/react/t2/"}}},{"node":{"id":"5608a053-3576-5c30-988e-23233a1c943a","excerpt":"리액트는 왜 개발되었는가 기술은 문제를 해결하기 위해 개발된다. 그리고 해결하기 위한 문제가 무엇인지 안다면, 그 기술을 더 잘 이해 할 수 있게된다. 리액트가 좋다고는 하지만 좋다는 말만듣고, 왜 이게 만들어졌는지 이해하지 못한채 학습을 시작하는 사람이 굉장히 많다. 때문에 우리는 학습시 바닐라 js와 리액트를 비교하며 학습을 하게 될 것이다. react는 웹사이트에 interactivity(상호작용)을 만들어준다. 이것이 리액트가 해결하는 바닐라 js의 문제이다. 바닐라 js VS 리액트 먼저, 바닐라 js에서, 버튼을 감지할때마다, 콘솔에 수를 나타내주는 프로그램을 입력해보자 별거 아닌 프로그램이지만 코드의 양이 상당히 많다.\nhtml작성 -> 태그변수화 -> 함수작성 -> 이벤트리스너 작성이다. 리액트 convert 이제 이 프로그램을 리액트로 만들어볼것이다. 기억해야될 것은, 리액트는 js에서만 작성하게 된다. html을 js와 분리하지 않는다. 또한 이 리액트코드는 원시…","frontmatter":{"categories":"react","title":"리액트_#1","date":"June 30, 2022"},"fields":{"slug":"/react/t1/index 2/"}}},{"node":{"id":"79330161-d0cb-5292-98ab-a916e2c92ca2","excerpt":"리액트는 왜 개발되었는가 기술은 문제를 해결하기 위해 개발된다. 그리고 해결하기 위한 문제가 무엇인지 안다면, 그 기술을 더 잘 이해 할 수 있게된다. 리액트가 좋다고는 하지만 좋다는 말만듣고, 왜 이게 만들어졌는지 이해하지 못한채 학습을 시작하는 사람이 굉장히 많다. 때문에 우리는 학습시 바닐라 js와 리액트를 비교하며 학습을 하게 될 것이다. react는 웹사이트에 interactivity(상호작용)을 만들어준다. 이것이 리액트가 해결하는 바닐라 js의 문제이다. 바닐라 js VS 리액트 먼저, 바닐라 js에서, 버튼을 감지할때마다, 콘솔에 수를 나타내주는 프로그램을 입력해보자 별거 아닌 프로그램이지만 코드의 양이 상당히 많다.\nhtml작성 -> 태그변수화 -> 함수작성 -> 이벤트리스너 작성이다. 리액트 convert 이제 이 프로그램을 리액트로 만들어볼것이다. 기억해야될 것은, 리액트는 js에서만 작성하게 된다. html을 js와 분리하지 않는다. 또한 이 리액트코드는 원시…","frontmatter":{"categories":"react","title":"리액트_#1","date":"June 30, 2022"},"fields":{"slug":"/react/t1/index 3/"}}},{"node":{"id":"943aa79b-4893-55dc-8506-ac4f8209f306","excerpt":"리액트는 왜 개발되었는가 기술은 문제를 해결하기 위해 개발된다. 그리고 해결하기 위한 문제가 무엇인지 안다면, 그 기술을 더 잘 이해 할 수 있게된다. 리액트가 좋다고는 하지만 좋다는 말만듣고, 왜 이게 만들어졌는지 이해하지 못한채 학습을 시작하는 사람이 굉장히 많다. 때문에 우리는 학습시 바닐라 js와 리액트를 비교하며 학습을 하게 될 것이다. react는 웹사이트에 interactivity(상호작용)을 만들어준다. 이것이 리액트가 해결하는 바닐라 js의 문제이다. 바닐라 js VS 리액트 먼저, 바닐라 js에서, 버튼을 감지할때마다, 콘솔에 수를 나타내주는 프로그램을 입력해보자 별거 아닌 프로그램이지만 코드의 양이 상당히 많다.\nhtml작성 -> 태그변수화 -> 함수작성 -> 이벤트리스너 작성이다. 리액트 convert 이제 이 프로그램을 리액트로 만들어볼것이다. 기억해야될 것은, 리액트는 js에서만 작성하게 된다. html을 js와 분리하지 않는다. 또한 이 리액트코드는 원시…","frontmatter":{"categories":"react","title":"리액트_#1","date":"June 30, 2022"},"fields":{"slug":"/react/t1/index 4/"}}},{"node":{"id":"218c18f6-c40c-5497-b23d-aa681498f057","excerpt":"리액트는 왜 개발되었는가 기술은 문제를 해결하기 위해 개발된다. 그리고 해결하기 위한 문제가 무엇인지 안다면, 그 기술을 더 잘 이해 할 수 있게된다. 리액트가 좋다고는 하지만 좋다는 말만듣고, 왜 이게 만들어졌는지 이해하지 못한채 학습을 시작하는 사람이 굉장히 많다. 때문에 우리는 학습시 바닐라 js와 리액트를 비교하며 학습을 하게 될 것이다. react는 웹사이트에 interactivity(상호작용)을 만들어준다. 이것이 리액트가 해결하는 바닐라 js의 문제이다. 바닐라 js VS 리액트 먼저, 바닐라 js에서, 버튼을 감지할때마다, 콘솔에 수를 나타내주는 프로그램을 입력해보자 별거 아닌 프로그램이지만 코드의 양이 상당히 많다.\nhtml작성 -> 태그변수화 -> 함수작성 -> 이벤트리스너 작성이다. 리액트 convert 이제 이 프로그램을 리액트로 만들어볼것이다. 기억해야될 것은, 리액트는 js에서만 작성하게 된다. html을 js와 분리하지 않는다. 또한 이 리액트코드는 원시…","frontmatter":{"categories":"react","title":"리액트_#1","date":"June 30, 2022"},"fields":{"slug":"/react/t1/"}}},{"node":{"id":"86d35419-7045-5405-9344-2dd8cd4b4667","excerpt":"오늘까지 한 과제 css 노마드코더에서 저번주부터 css 과제를 하기 시작했다. 할필요가 없는 과제였지만 어쨌거나 했고, 성공률이 100%라면 80퍼센트정도 한것 같다. 20퍼센트는 귀찮아서 안하거나, 새로운 부분이였다. 이런게 있구나~ 정도에서 그쳤지 완전히 내 지식으로는 안만들었다.(안과못은 다르다. 나는 반성의 의미이다.) 하루하루를 풀콤보로 살아갈수는 없다는 내 철학도 있지만 이건 선을 조금 넘은 것 같다는 생각을 했다. 다른건 몰라도, 내게 필요한것은 구분하여 필요하다 판단되면 무조건 받아들이는것이 좋겠다.","frontmatter":{"categories":"잡담","title":"리액트 공부를 시작하면서","date":"June 28, 2022"},"fields":{"slug":"/tes_t/index 2/"}}},{"node":{"id":"e46f8146-301d-5020-8c7b-cb758bb3a04a","excerpt":"오늘까지 한 과제 css 노마드코더에서 저번주부터 css 과제를 하기 시작했다. 할필요가 없는 과제였지만 어쨌거나 했고, 성공률이 100%라면 80퍼센트정도 한것 같다. 20퍼센트는 귀찮아서 안하거나, 새로운 부분이였다. 이런게 있구나~ 정도에서 그쳤지 완전히 내 지식으로는 안만들었다.(안과못은 다르다. 나는 반성의 의미이다.) 하루하루를 풀콤보로 살아갈수는 없다는 내 철학도 있지만 이건 선을 조금 넘은 것 같다는 생각을 했다. 다른건 몰라도, 내게 필요한것은 구분하여 필요하다 판단되면 무조건 받아들이는것이 좋겠다.","frontmatter":{"categories":"잡담","title":"리액트 공부를 시작하면서","date":"June 28, 2022"},"fields":{"slug":"/tes_t/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"이은호","bio":{"role":"개발자","description":["가치를 사랑하는","유쾌하게 일하는","아름다운것에 약한"],"thumbnail":"profile.gif"},"social":{"github":"","linkedIn":"","email":""}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}